<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on xychen&#39;s blog</title>
    <link>https://xychen.github.io/tags/php/</link>
    <description>Recent content in php on xychen&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 05 Aug 2019 10:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xychen.github.io/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>装饰者模式（PHP实现）</title>
      <link>https://xychen.github.io/post/2019-08-06-decorator/</link>
      <pubDate>Mon, 05 Aug 2019 10:00:00 +0000</pubDate>
      
      <guid>https://xychen.github.io/post/2019-08-06-decorator/</guid>
      <description>背景 在Laravel框架中，解析请求生成响应之前或之后需要经过中间件的处理，包括验证、Cookie加密、开启会话、CSRF保护等。这些处理有</description>
    </item>
    
    <item>
      <title>supervisor在PHP项目中的使用</title>
      <link>https://xychen.github.io/post/2017-12-17-php-supervisor/</link>
      <pubDate>Sat, 16 Dec 2017 20:00:00 +0000</pubDate>
      
      <guid>https://xychen.github.io/post/2017-12-17-php-supervisor/</guid>
      <description>使用背景 很多场景下，我们需要使用PHP开发一些脚本，用于处理离线数据。常用的实现方式有以下几种: 1.crontab：这种方式适用于定时任务，</description>
    </item>
    
    <item>
      <title>常用配置文件的查找</title>
      <link>https://xychen.github.io/post/2017-12-16-conf-fine/</link>
      <pubDate>Sat, 16 Dec 2017 11:00:00 +0000</pubDate>
      
      <guid>https://xychen.github.io/post/2017-12-16-conf-fine/</guid>
      <description>有些时候，我们不能直观的看到相关软件配置文件的位置。最简单的办法，我们可以使用find命令直接查找文件，当然你需要提前知道配置文件的名称。当</description>
    </item>
    
    <item>
      <title>排查php中curl请求超时问题</title>
      <link>https://xychen.github.io/post/2016-09-18-php-curl-timeout/</link>
      <pubDate>Sun, 18 Sep 2016 09:00:00 +0000</pubDate>
      
      <guid>https://xychen.github.io/post/2016-09-18-php-curl-timeout/</guid>
      <description>问题描述 一个项目需要抓取一些网页数据，使用的是php中的curl扩展，模拟浏览器行为，通过http协议请求web数据。 今天收到了短信报警，爬</description>
    </item>
    
  </channel>
</rss>